{
  "hash": "afa96904ecff38446e8749754e2290ea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Sequencing\"\neditor_options: \n  chunk_output_type: console\n---\n\n# Volcano plots\n\nSetup\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Always load same package versions\ngroundhog.day <- \"2024-01-01\"\ngroundhog::meta.groundhog(groundhog.day) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[1;36mNow using 'groundhog_3.1.2'.\u001b[0m\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npkgs <-  c(\"data.table\",\n           \"readxl\",\n           \"ggplot2\",\n           \"ggrepel\",\n           \"here\")\n\ngroundhog.library(pkgs, groundhog.day)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at C:/Users/alosvendsen/Documents/R/manuscript\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[36mSuccessfully attached 'data.table_1.14.10'\u001b[0m\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[36mSuccessfully attached 'readxl_1.4.3'\u001b[0m\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[36mSuccessfully attached 'ggplot2_3.4.4'\u001b[0m\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[36mSuccessfully attached 'ggrepel_0.9.4'\u001b[0m\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\u001b[36mSuccessfully attached 'here_1.0.1'\u001b[0m\n```\n\n\n:::\n:::\n\n\n\n## IL-6 pooled\nNo sig up or down regulated genes when pooling IL-6 10 and 0.1 ng/ml\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Import raw data from the specified Excel file and sheet\nfile <- here(\"notebooks/seq/data_raw/IL6_vs_vehicle.xlsx\")\nil6_pooled_data <- read_xlsx(file, sheet = 1)\n\n\nsetDT(il6_pooled_data)\nil6_pooled_data[logCPM > 1 & logFC > 1 & FDR < 0.05]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nEmpty data.table (0 rows and 8 cols): matrixrow,ENSEMBL_ID,genes,logFC,logCPM,LR...\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nil6_pooled_data[logCPM > 1 & logFC < -1 & FDR < 0.05]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nEmpty data.table (0 rows and 8 cols): matrixrow,ENSEMBL_ID,genes,logFC,logCPM,LR...\n```\n\n\n:::\n:::\n\nAs seen in empty dataframes there are no sig up or downregulated.\nAlso seen in the volcano plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Create a new column for labeling differential gene expression\nil6_pooled_data$diffexpressed <- \"NO\" # Default value for genes not differentially expressed\n\n# Identify and label upregulated genes\n# Genes with log2FoldChange > 1, FDR < 0.05, and logCPM > 1 are labeled as \"UP\"\nil6_pooled_data$diffexpressed[il6_pooled_data$logFC > 1 & il6_pooled_data$FDR < 0.05 & il6_pooled_data$logCPM > 1] <- \"UP\"\n\n# Identify and label downregulated genes\n# Genes with log2FoldChange < -1, FDR < 0.05, and logCPM > 1 are labeled as \"DOWN\"\nil6_pooled_data$diffexpressed[il6_pooled_data$logFC < -1 & il6_pooled_data$FDR < 0.05 & il6_pooled_data$logCPM > 1] <- \"DOWN\"\n\n# Initialize 'delabel' column to NA for all rows to create the column\nil6_pooled_data$delabel <- NA\n\n# Now, you can safely assign gene names to the 'delabel' column for differentially expressed genes\nil6_pooled_data$delabel[il6_pooled_data$diffexpressed != \"NO\"] <- il6_pooled_data$genes[il6_pooled_data$diffexpressed != \"NO\"]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Create the volcano plot using ggplot2\nplot_volcano_il6_pooled <- \n  ggplot(data=il6_pooled_data, aes(x=logFC, y=-log10(FDR), col=diffexpressed, label=delabel)) + \n    theme_minimal() + # Use a minimal theme for the plot\n    geom_text_repel(max.overlaps = 7) + # Use repelling text to avoid label overlap\n    scale_color_manual(values=c(\"blue\", \"black\", \"red\")) + # Custom colors for differential expression\n    geom_vline(xintercept=c(-1, 1), col=\"dark grey\") + # Vertical lines for fold change thresholds\n    geom_hline(yintercept=-log10(0.05), col=\"dark grey\") + # Horizontal line for FDR threshold\n    geom_point() + # Add points for each gene\n    labs(color = 'Direction of gene expression', # Customize legend title\n         x = expression(\"log\"[2]*\"FC (IL6 vs Vehicle)\"), # Customize x-axis label\n         y = expression(\"-log\"[10]*\"FDR\")) + # Customize y-axis label\n    #scale_x_continuous(breaks = seq(-11, 9, 2)) + # Customize x-axis breaks\n    #scale_y_continuous(breaks = seq(0, 90, 10)) + # Customize y-axis breaks\n    theme(panel.grid.minor.y = element_blank(), panel.grid.minor.x = element_blank())+ # Adjust minor grid lines\n    ggtitle('Volcano Plot: IL6 vs Vehicle') # Add a title to the plot\n\nplot_volcano_il6_pooled\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 12820 rows containing missing values (`geom_text_repel()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](seq_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## IL-6 10 ng/ml\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Import raw data from the specified Excel file and sheet\nfile <- here(\"notebooks/seq/data_raw/IL6_10_vs_vehicle.xlsx\")\nil6_10_data <- read_xlsx(file, sheet = 1)\n```\n:::\n\n::: {#cell-fig-volcano-il6-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il6-10\n#| fig-cap: \"Volcano plot. IL-6 10 ng/ml vs. vehicle control. Vertical lines for fold change thresholds\"\n#| warning: false\n\n# Create a new column for labeling differential gene expression\nil6_10_data$diffexpressed <- \"NO\" # Default value for genes not differentially expressed\n\n# Identify and label upregulated genes\n# Genes with log2FoldChange > 1, FDR < 0.05, and logCPM > 1 are labeled as \"UP\"\nil6_10_data$diffexpressed[il6_10_data$logFC > 1 & il6_10_data$FDR < 0.05 & il6_10_data$logCPM > 1] <- \"UP\"\n\n# Identify and label downregulated genes\n# Genes with log2FoldChange < -1, FDR < 0.05, and logCPM > 1 are labeled as \"DOWN\"\nil6_10_data$diffexpressed[il6_10_data$logFC < -1 & il6_10_data$FDR < 0.05 & il6_10_data$logCPM > 1] <- \"DOWN\"\n\n# Initialize 'delabel' column to NA for all rows to create the column\nil6_10_data$delabel <- NA\n\n# Now, you can safely assign gene names to the 'delabel' column for differentially expressed genes\nil6_10_data$delabel[il6_10_data$diffexpressed != \"NO\"] <- il6_10_data$genes[il6_10_data$diffexpressed != \"NO\"]\n\n# Create the volcano plot using ggplot2\nplot_volcano_il6_10 <- \n  ggplot(data=il6_10_data, aes(x=logFC, y=-log10(FDR), col=diffexpressed, label=delabel)) + \n    theme_minimal() + # Use a minimal theme for the plot\n    geom_text_repel(max.overlaps = 10) + # Use repelling text to avoid label overlap\n    scale_color_manual(values=c(\"blue\", \"black\", \"red\")) + # Custom colors for differential expression\n    geom_vline(xintercept=c(-1, 1), col=\"dark grey\", linetype = \"dashed\") + # Vertical lines for fold change thresholds\n    geom_hline(yintercept=-log10(0.05), col=\"dark grey\", linetype = \"dashed\") + # Horizontal line for FDR threshold\n    geom_point() + # Add points for each gene\n    labs(color = 'Direction of gene expression', # Customize legend title\n         x = expression(\"log\"[2]*\"FC (IL6 vs Vehicle)\"), # Customize x-axis label\n         y = expression(\"-log\"[10]*\"FDR\")) + # Customize y-axis label\n    scale_x_continuous(limits = c(-8, 10)) + # Customize x-axis breaks\n    scale_y_continuous(limits = c(0, 320)) + # Customize y-axis breaks\n    theme(panel.grid.minor.y = element_blank(),# Remove minor grid lines\n          panel.grid.minor.x = element_blank(),# Remove minor grid lines\n          legend.position = \"bottom\" \n          )+ \n    ggtitle('Volcano Plot: IL6 10 ng/ml vs Vehicle') # Add a title to the plot\n\n\nplot_volcano_il6_10\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 11731 rows containing missing values (`geom_text_repel()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: ggrepel: 838 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il6-10\n#| fig-cap: \"Volcano plot. IL-6 10 ng/ml vs. vehicle control. Vertical lines for fold change thresholds\"\n#| warning: false\n\n# ggsave(filename = here(\"notebooks/seq/output/IL_6_10ng_volcano.png\"))\n```\n\n::: {.cell-output-display}\n![Volcano plot. IL-6 10 ng/ml vs. vehicle control. Vertical lines for fold change thresholds](seq_files/figure-html/fig-volcano-il6-10-1.png){#fig-volcano-il6-10 width=672}\n:::\n:::\n\n\nTrying to ad a box around the out of bounds data points. They have a smaller FDR than can be handled.\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# # Adjusting the dataset to include points with FDR of 0\n# il6_10_data$adjusted_FDR <- ifelse(il6_10_data$FDR == 0, 340, -log10(il6_10_data$FDR))\n# \n# # Create the volcano plot using ggplot2\n# plot_volcano_il6_10 <- \n#   ggplot(data=il6_10_data, aes(x=logFC, y=adjusted_FDR, col=diffexpressed, label=delabel)) + \n#     theme_minimal() +\n#     geom_text_repel(max.overlaps = 10) +\n#     scale_color_manual(values=c(\"blue\", \"black\", \"red\")) +\n#     geom_vline(xintercept=c(-1, 1), col=\"dark grey\", linetype = \"dashed\") +\n#     geom_hline(yintercept=-log10(0.05), col=\"dark grey\", linetype = \"dashed\") + # Use the new adjusted value\n#     geom_point() +\n#     labs(color = 'Direction of gene expression',\n#          x = expression(\"log\"[2]*\"FC (IL6 vs Vehicle)\"),\n#          y = expression(\"-log\"[10]*\"Adjusted FDR\")) +\n#     scale_x_continuous(limits = c(-8, 10)) +\n#     scale_y_continuous(limits = c(0, 450)) +\n#     theme(\n#       panel.grid.minor.y = element_blank(),\n#       panel.grid.minor.x = element_blank(),\n#       legend.position = \"bottom\"\n#     ) +\n#     annotate(\"rect\", xmin = 1, xmax = 10, ymin = 320, ymax = 340, alpha = .2, color = \"black\") +\n#     ggtitle('Volcano Plot: IL6 10 ng/ml vs Vehicle')\n# \n# # Display the plot\n# plot_volcano_il6_10\n```\n:::\n\n\n## IL-6 0.1 ng/ml\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Import raw data from the specified Excel file and sheet\nfile <- here(\"notebooks/seq/data_raw/IL6_0.1_vs_vehicle.xlsx\")\nil6_0.1_data <- read_xlsx(file, sheet = 1)\n\n\nsetDT(il6_0.1_data)\nil6_0.1_data[logCPM > 1 & FDR < 0.05 & logFC > 0] |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 25\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nil6_0.1_data[logCPM > 1 & FDR < 0.05 & logFC < 0] |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\nIkke nogen der er signifikant opreguleret når logFC > 1\nKun to signifikant nedregulerede ved logFC < -1\n\n\n::: {#cell-fig-volcano-il6-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il6-0.1\n#| fig-cap: \"Volcano plot. IL-6 0.1 ng/ml vs. vehicle control. Vertical lines for fold change thresholds. Note few significant above 2 fold change\"\n#| warning: false\n\n# Create a new column for labeling differential gene expression\nil6_0.1_data$diffexpressed <- \"NO\" # Default value for genes not differentially expressed\n\n# Identify and label upregulated genes\n# Genes with log2FoldChange > 1, FDR < 0.05, and logCPM > 1 are labeled as \"UP\"\nil6_0.1_data$diffexpressed[il6_0.1_data$FDR < 0.05 & il6_0.1_data$logCPM > 1 & il6_0.1_data$logFC > 0] <- \"UP\"\n\n# Identify and label downregulated genes\n# Genes with log2FoldChange < -1, FDR < 0.05, and logCPM > 1 are labeled as \"DOWN\"\nil6_0.1_data$diffexpressed[il6_0.1_data$FDR < 0.05 & il6_0.1_data$logCPM > 1 & il6_0.1_data$logFC < 0] <- \"DOWN\"\n\n# Initialize 'delabel' column to NA for all rows to create the column\nil6_0.1_data$delabel <- NA\n\n# Now, you can safely assign gene names to the 'delabel' column for differentially expressed genes\nil6_0.1_data$delabel[il6_0.1_data$diffexpressed != \"NO\"] <- il6_0.1_data$genes[il6_0.1_data$diffexpressed != \"NO\"]\n\n# Create the volcano plot using ggplot2\nplot_volcano_il6_0.1 <- \n  ggplot(data=il6_0.1_data, aes(x=logFC, y=-log10(FDR), col=diffexpressed, label=delabel)) + \n    theme_minimal() + # Use a minimal theme for the plot\n    geom_text_repel(max.overlaps = 10) + # Use repelling text to avoid label overlap\n    scale_color_manual(values=c(\"blue\", \"black\", \"red\")) + # Custom colors for differential expression\n    geom_vline(xintercept=c(-1, 1), col=\"dark grey\", linetype = \"dashed\") + # Vertical lines for fold change thresholds\n    geom_hline(yintercept=-log10(0.05), col=\"dark grey\", linetype = \"dashed\") + # Horizontal line for FDR threshold\n    geom_point() + # Add points for each gene\n    labs(color = 'Direction of gene expression', # Customize legend title\n         x = expression(\"log\"[2]*\"FC (IL6 vs Vehicle)\"), # Customize x-axis label\n         y = expression(\"-log\"[10]*\"FDR\")) + # Customize y-axis label\n    #scale_x_continuous(limits = c(-8, 10)) + # Customize x-axis breaks\n    #scale_y_continuous(limits = c(0, 320)) + # Customize y-axis breaks\n    theme(panel.grid.minor.y = element_blank(),# Remove minor grid lines\n          panel.grid.minor.x = element_blank(),# Remove minor grid lines\n          legend.position = \"bottom\" \n          )+ \n    ggtitle('Volcano Plot: IL6 0.1 ng/ml vs Vehicle') # Add a title to the plot\n\n\nplot_volcano_il6_0.1\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 12527 rows containing missing values (`geom_text_repel()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: ggrepel: 14 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il6-0.1\n#| fig-cap: \"Volcano plot. IL-6 0.1 ng/ml vs. vehicle control. Vertical lines for fold change thresholds. Note few significant above 2 fold change\"\n#| warning: false\n\n# ggsave(filename = here(\"notebooks/seq/output/IL_6_01ng_volcano.png\"))\n```\n\n::: {.cell-output-display}\n![Volcano plot. IL-6 0.1 ng/ml vs. vehicle control. Vertical lines for fold change thresholds. Note few significant above 2 fold change](seq_files/figure-html/fig-volcano-il6-0.1-1.png){#fig-volcano-il6-0.1 width=672}\n:::\n:::\n\n\n\n## IL-1B pooled\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Import raw data from the specified Excel file and sheet\nfile <- here(\"notebooks/seq/data_raw/IL1B_vs_vehicle.xlsx\")\nil1B_pooled_data <- read_xlsx(file, sheet = 1)\n\n\nsetDT(il1B_pooled_data)\nil1B_pooled_data[logCPM > 1 & FDR < 0.05 & logFC > 1] |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 241\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nil1B_pooled_data[logCPM > 1 & FDR < 0.05 & logFC < 1] |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 104\n```\n\n\n:::\n:::\n\n::: {#cell-fig-volcano-il1B-pooled .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il1B-pooled\n#| fig-cap: \"Volcano plot. IL-1B pooled vs. vehicle control. Vertical lines for fold change thresholds\"\n#| warning: false\n\n# Create a new column for labeling differential gene expression\nil1B_pooled_data$diffexpressed <- \"NO\" # Default value for genes not differentially expressed\n\n# Identify and label upregulated genes\n# Genes with log2FoldChange > 1, FDR < 0.05, and logCPM > 1 are labeled as \"UP\"\nil1B_pooled_data$diffexpressed[il1B_pooled_data$FDR < 0.05 & il1B_pooled_data$logCPM > 1 & il1B_pooled_data$logFC > 0] <- \"UP\"\n\n# Identify and label downregulated genes\n# Genes with log2FoldChange < -1, FDR < 0.05, and logCPM > 1 are labeled as \"DOWN\"\nil1B_pooled_data$diffexpressed[il1B_pooled_data$FDR < 0.05 & il1B_pooled_data$logCPM > 1 & il1B_pooled_data$logFC < 0] <- \"DOWN\"\n\n# Initialize 'delabel' column to NA for all rows to create the column\nil1B_pooled_data$delabel <- NA\n\n# Now, you can safely assign gene names to the 'delabel' column for differentially expressed genes\nil1B_pooled_data$delabel[il1B_pooled_data$diffexpressed != \"NO\"] <- il1B_pooled_data$genes[il1B_pooled_data$diffexpressed != \"NO\"]\n\n# Create the volcano plot using ggplot2\nplot_volcano_il1B_pooled <- \n  ggplot(data=il1B_pooled_data, aes(x=logFC, y=-log10(FDR), col=diffexpressed, label=delabel)) + \n    theme_minimal() + # Use a minimal theme for the plot\n    geom_text_repel(max.overlaps = 10) + # Use repelling text to avoid label overlap\n    scale_color_manual(values=c(\"blue\", \"black\", \"red\")) + # Custom colors for differential expression\n    geom_vline(xintercept=c(-1, 1), col=\"dark grey\", linetype = \"dashed\") + # Vertical lines for fold change thresholds\n    geom_hline(yintercept=-log10(0.05), col=\"dark grey\", linetype = \"dashed\") + # Horizontal line for FDR threshold\n    geom_point() + # Add points for each gene\n    labs(color = 'Direction of gene expression', # Customize legend title\n         x = expression(\"log\"[2]*\"FC (IL6 vs Vehicle)\"), # Customize x-axis label\n         y = expression(\"-log\"[10]*\"FDR\")) + # Customize y-axis label\n    #scale_x_continuous(limits = c(-8, 10)) + # Customize x-axis breaks\n    #scale_y_continuous(limits = c(0, 320)) + # Customize y-axis breaks\n    theme(panel.grid.minor.y = element_blank(),# Remove minor grid lines\n          panel.grid.minor.x = element_blank(),# Remove minor grid lines\n          legend.position = \"bottom\" \n          )+ \n    ggtitle('Volcano Plot: IL1B 10 ng/ml vs Vehicle') # Add a title to the plot\n\n\nplot_volcano_il1B_pooled\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 12747 rows containing missing values (`geom_text_repel()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: ggrepel: 318 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il1B-pooled\n#| fig-cap: \"Volcano plot. IL-1B pooled vs. vehicle control. Vertical lines for fold change thresholds\"\n#| warning: false\n\n# ggsave(filename = here(\"notebooks/seq/output/IL_1B_10ng_volcano.png\"))\n```\n\n::: {.cell-output-display}\n![Volcano plot. IL-1B pooled vs. vehicle control. Vertical lines for fold change thresholds](seq_files/figure-html/fig-volcano-il1B-pooled-1.png){#fig-volcano-il1B-pooled width=672}\n:::\n:::\n\n\n\n## IL-1B 10 ng/ml\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Import raw data from the specified Excel file and sheet\nfile <- here(\"notebooks/seq/data_raw/IL1B_10_vs_vehicle.xlsx\")\nil1B_10_data <- read_xlsx(file, sheet = 1)\n\n\nsetDT(il1B_10_data)\nil1B_10_data[logCPM > 1 & FDR < 0.05 & logFC > 1] |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 648\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nil1B_10_data[logCPM > 1 & FDR < 0.05 & logFC < 1] |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5111\n```\n\n\n:::\n:::\n\n::: {#cell-fig-volcano-il1B-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il1B-10\n#| fig-cap: \"Volcano plot. IL-1B 10 ng/ml vs. vehicle control. Vertical lines for fold change thresholds\"\n#| warning: false\n\n# Create a new column for labeling differential gene expression\nil1B_10_data$diffexpressed <- \"NO\" # Default value for genes not differentially expressed\n\n# Identify and label upregulated genes\n# Genes with log2FoldChange > 1, FDR < 0.05, and logCPM > 1 are labeled as \"UP\"\nil1B_10_data$diffexpressed[il1B_10_data$FDR < 0.05 & il1B_10_data$logCPM > 1 & il1B_10_data$logFC > 0] <- \"UP\"\n\n# Identify and label downregulated genes\n# Genes with log2FoldChange < -1, FDR < 0.05, and logCPM > 1 are labeled as \"DOWN\"\nil1B_10_data$diffexpressed[il1B_10_data$FDR < 0.05 & il1B_10_data$logCPM > 1 & il1B_10_data$logFC < 0] <- \"DOWN\"\n\n# Initialize 'delabel' column to NA for all rows to create the column\nil1B_10_data$delabel <- NA\n\n# Now, you can safely assign gene names to the 'delabel' column for differentially expressed genes\nil1B_10_data$delabel[il1B_10_data$diffexpressed != \"NO\"] <- il1B_10_data$genes[il1B_10_data$diffexpressed != \"NO\"]\n\n# Create the volcano plot using ggplot2\nplot_volcano_il1B_0.1 <- \n  ggplot(data=il1B_10_data, aes(x=logFC, y=-log10(FDR), col=diffexpressed, label=delabel)) + \n    theme_minimal() + # Use a minimal theme for the plot\n    geom_text_repel(max.overlaps = 10) + # Use repelling text to avoid label overlap\n    scale_color_manual(values=c(\"blue\", \"black\", \"red\")) + # Custom colors for differential expression\n    geom_vline(xintercept=c(-1, 1), col=\"dark grey\", linetype = \"dashed\") + # Vertical lines for fold change thresholds\n    geom_hline(yintercept=-log10(0.05), col=\"dark grey\", linetype = \"dashed\") + # Horizontal line for FDR threshold\n    geom_point() + # Add points for each gene\n    labs(color = 'Direction of gene expression', # Customize legend title\n         x = expression(\"log\"[2]*\"FC (IL6 vs Vehicle)\"), # Customize x-axis label\n         y = expression(\"-log\"[10]*\"FDR\")) + # Customize y-axis label\n    #scale_x_continuous(limits = c(-8, 10)) + # Customize x-axis breaks\n    #scale_y_continuous(limits = c(0, 320)) + # Customize y-axis breaks\n    theme(panel.grid.minor.y = element_blank(),# Remove minor grid lines\n          panel.grid.minor.x = element_blank(),# Remove minor grid lines\n          legend.position = \"bottom\" \n          )+ \n    ggtitle('Volcano Plot: IL1B 10 ng/ml vs Vehicle') # Add a title to the plot\n\n\nplot_volcano_il1B_0.1\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 7089 rows containing missing values (`geom_text_repel()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: ggrepel: 5707 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il1B-10\n#| fig-cap: \"Volcano plot. IL-1B 10 ng/ml vs. vehicle control. Vertical lines for fold change thresholds\"\n#| warning: false\n\n# ggsave(filename = here(\"notebooks/seq/output/IL_1B_10ng_volcano.png\"))\n```\n\n::: {.cell-output-display}\n![Volcano plot. IL-1B 10 ng/ml vs. vehicle control. Vertical lines for fold change thresholds](seq_files/figure-html/fig-volcano-il1B-10-1.png){#fig-volcano-il1B-10 width=672}\n:::\n:::\n\n\n\n## IL-1B 0.1 ng/ml\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Import raw data from the specified Excel file and sheet\nfile <- here(\"notebooks/seq/data_raw/IL1B_0.1_vs_vehicle.xlsx\")\nil1B_0.1_data <- read_xlsx(file, sheet = 1)\n\n\nsetDT(il1B_0.1_data)\nil1B_0.1_data[logCPM > 1 & FDR < 0.05 & logFC > 1] |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 106\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nil1B_0.1_data[logCPM > 1 & FDR < 0.05 & logFC < 1] |> nrow()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 684\n```\n\n\n:::\n:::\n\n::: {#cell-fig-volcano-il1B-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il1B-0.1\n#| fig-cap: \"Volcano plot. IL-1B 0.1 ng/ml vs. vehicle control. Vertical lines for fold change thresholds\"\n#| warning: false\n\n# Create a new column for labeling differential gene expression\nil1B_0.1_data$diffexpressed <- \"NO\" # Default value for genes not differentially expressed\n\n# Identify and label upregulated genes\n# Genes with log2FoldChange > 1, FDR < 0.05, and logCPM > 1 are labeled as \"UP\"\nil1B_0.1_data$diffexpressed[il1B_0.1_data$FDR < 0.05 & il1B_0.1_data$logCPM > 1 & il1B_0.1_data$logFC > 0] <- \"UP\"\n\n# Identify and label downregulated genes\n# Genes with log2FoldChange < -1, FDR < 0.05, and logCPM > 1 are labeled as \"DOWN\"\nil1B_0.1_data$diffexpressed[il1B_0.1_data$FDR < 0.05 & il1B_0.1_data$logCPM > 1 & il1B_0.1_data$logFC < 0] <- \"DOWN\"\n\n# Initialize 'delabel' column to NA for all rows to create the column\nil1B_0.1_data$delabel <- NA\n\n# Now, you can safely assign gene names to the 'delabel' column for differentially expressed genes\nil1B_0.1_data$delabel[il1B_0.1_data$diffexpressed != \"NO\"] <- il1B_0.1_data$genes[il1B_0.1_data$diffexpressed != \"NO\"]\n\n# Create the volcano plot using ggplot2\nplot_volcano_il1B_0.1 <- \n  ggplot(data=il1B_0.1_data, aes(x=logFC, y=-log10(FDR), col=diffexpressed, label=delabel)) + \n    theme_minimal() + # Use a minimal theme for the plot\n    geom_text_repel(max.overlaps = 7) + # Use repelling text to avoid label overlap\n    scale_color_manual(values=c(\"blue\", \"black\", \"red\")) + # Custom colors for differential expression\n    geom_vline(xintercept=c(-1, 1), col=\"dark grey\", linetype = \"dashed\") + # Vertical lines for fold change thresholds\n    geom_hline(yintercept=-log10(0.05), col=\"dark grey\", linetype = \"dashed\") + # Horizontal line for FDR threshold\n    geom_point() + # Add points for each gene\n    labs(color = 'Direction of gene expression', # Customize legend title\n         x = expression(\"log\"[2]*\"FC (IL6 vs Vehicle)\"), # Customize x-axis label\n         y = expression(\"-log\"[10]*\"FDR\")) + # Customize y-axis label\n    #scale_x_continuous(limits = c(-8, 10)) + # Customize x-axis breaks\n    #scale_y_continuous(limits = c(0, 320)) + # Customize y-axis breaks\n    theme(panel.grid.minor.y = element_blank(),# Remove minor grid lines\n          panel.grid.minor.x = element_blank(),# Remove minor grid lines\n          legend.position = \"bottom\" \n          )+ \n    ggtitle('Volcano Plot: IL1B 0.1 ng/ml vs Vehicle') # Add a title to the plot\n\n\nplot_volcano_il1B_0.1\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 11903 rows containing missing values (`geom_text_repel()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: ggrepel: 771 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: fig-volcano-il1B-0.1\n#| fig-cap: \"Volcano plot. IL-1B 0.1 ng/ml vs. vehicle control. Vertical lines for fold change thresholds\"\n#| warning: false\n\n# ggsave(filename = here(\"notebooks/seq/output/IL_1B_01ng_volcano.png\"))\n```\n\n::: {.cell-output-display}\n![Volcano plot. IL-1B 0.1 ng/ml vs. vehicle control. Vertical lines for fold change thresholds](seq_files/figure-html/fig-volcano-il1B-0.1-1.png){#fig-volcano-il1B-0.1 width=672}\n:::\n:::\n\n\n## Abemaciclib 5 µM \n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Import raw data from the specified Excel file and sheet\nfile <- here(\"notebooks/seq/data_raw/abe_vs_vehicle.xlsx\")\nabe_data <- read_xlsx(file, sheet = 1)\n\n\nsetDT(abe_data)\nabe_data[logCPM > 1 & FDR < 0.05 & logFC > 1] \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     matrixrow      ENSEMBL_ID           genes    logFC   logCPM         LR\n  1:      1656 ENSG00000140470        ADAMTS17 2.736348 6.631470 569.837805\n  2:      4904 ENSG00000161896           IP6K3 2.729978 4.906166 441.472543\n  3:      5856 ENSG00000157557            ETS2 2.826833 4.472978 371.842471\n  4:      6006 ENSG00000169258          GPRIN1 3.182320 4.438138 368.052632\n  5:      1033 ENSG00000156510           HKDC1 2.291036 7.161496 338.469713\n ---                                                                       \n543:     11113 ENSG00000069812            HES2 1.055350 1.028193  11.189460\n544:     10925 ENSG00000266313 ENSG00000266313 1.019175 1.183450  10.890585\n545:     10956 ENSG00000232679       LINC01705 1.006567 1.166972   9.967888\n546:     11004 ENSG00000120334           CENPL 1.104778 1.134940   8.230452\n547:     10463 ENSG00000163399          ATP1A1 1.028020 1.509585   7.652900\n            PValue           FDR\n  1: 6.089737e-126 9.712369e-123\n  2:  5.175655e-98  3.001645e-95\n  3:  7.430768e-83  3.160306e-80\n  4:  4.968204e-82  2.044817e-79\n  5:  1.374492e-75  4.496703e-73\n ---                            \n543:  8.226327e-04  2.103401e-03\n544:  9.665429e-04  2.435734e-03\n545:  1.592941e-03  3.839690e-03\n546:  4.119326e-03  9.029059e-03\n547:  5.668112e-03  1.203318e-02\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nabe_data[logCPM > 1 & FDR < 0.05 & logFC < 1] \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      matrixrow      ENSEMBL_ID     genes      logFC    logCPM          LR\n   1:       193 ENSG00000124253      PCK1 -7.3910348  8.918734 2613.265382\n   2:       278 ENSG00000138115    CYP2C8 -4.0321531  8.470964 1187.675046\n   3:        82 ENSG00000197408    CYP2B6 -2.8311130 10.051964  729.734930\n   4:       120 ENSG00000134240    HMGCS2 -2.8577733  9.588448  708.417598\n   5:      2647 ENSG00000157087    ATP2B2 -3.1479931  5.947785  687.874644\n  ---                                                                     \n5912:       162 ENSG00000108654      DDX5  0.2229198  9.205413    4.839048\n5913:      3249 ENSG00000186815     TPCN1 -0.2558597  5.666161    4.837830\n5914:      7447 ENSG00000151320     AKAP6 -0.3351600  3.669124    4.833075\n5915:     10108 ENSG00000137970    RPL7P9  0.5536888  1.801992    4.827948\n5916:     11100 ENSG00000226696 LENG8-AS1 -0.6814634  1.042936    4.823560\n             PValue           FDR\n   1:  0.000000e+00  0.000000e+00\n   2: 2.909826e-260 1.856323e-256\n   3: 1.022911e-160 4.350439e-157\n   4: 4.418324e-156 1.409335e-152\n   5: 1.295613e-151 3.306146e-148\n  ---                            \n5912:  2.782225e-02  4.957186e-02\n5913:  2.784191e-02  4.959996e-02\n5914:  2.791880e-02  4.972999e-02\n5915:  2.800193e-02  4.986415e-02\n5916:  2.807330e-02  4.998427e-02\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# #| label: fig-abemaceclib\n# #| fig-cap: \"Volcano plot. Abemaciclib vs. vehicle control. Vertical lines for fold change thresholds\"\n# #| warning: false\n# \n# # Create a new column for labeling differential gene expression\n# abe_data$diffexpressed <- \"NO\" # Default value for genes not differentially expressed\n# \n# # Identify and label upregulated genes\n# # Genes with log2FoldChange > 1, FDR < 0.05, and logCPM > 1 are labeled as \"UP\"\n# abe_data$diffexpressed[abe_data$FDR < 0.05 & abe_data$logCPM > 1 & abe_data$logFC > 0] <- \"UP\"\n# \n# # Identify and label downregulated genes\n# # Genes with log2FoldChange < -1, FDR < 0.05, and logCPM > 1 are labeled as \"DOWN\"\n# abe_data$diffexpressed[abe_data$FDR < 0.05 & abe_data$logCPM > 1 & abe_data$logFC < 0] <- \"DOWN\"\n# \n# # Initialize 'delabel' column to NA for all rows to create the column\n# abe_data$delabel <- NA\n# \n# # Now, you can safely assign gene names to the 'delabel' column for differentially expressed genes\n# abe_data$delabel[abe_data$diffexpressed != \"NO\"] <- abe_data$genes[abe_data$diffexpressed != \"NO\"]\n# \n# # Create the volcano plot using ggplot2\n# plot_volcano_abe <- \n#   ggplot(data=abe_data, aes(x=logFC, y=-log10(FDR), col=diffexpressed, label=delabel)) + \n#     theme_minimal() + # Use a minimal theme for the plot\n#     geom_text_repel() + # Use repelling text to avoid label overlap\n#     scale_color_manual(values=c(\"blue\", \"black\", \"red\")) + # Custom colors for differential expression\n#     geom_vline(xintercept=c(-1, 1), col=\"dark grey\", linetype = \"dashed\") + # Vertical lines for fold change thresholds\n#     geom_hline(yintercept=-log10(0.05), col=\"dark grey\", linetype = \"dashed\") + # Horizontal line for FDR threshold\n#     geom_point() + # Add points for each gene\n#     labs(color = 'Direction of gene expression', # Customize legend title\n#          x = expression(\"log\"[2]*\"FC (IL6 vs Vehicle)\"), # Customize x-axis label\n#          y = expression(\"-log\"[10]*\"FDR\")) + # Customize y-axis label\n#     #scale_x_continuous(limits = c(-8, 10)) + # Customize x-axis breaks\n#     #scale_y_continuous(limits = c(0, 320)) + # Customize y-axis breaks\n#     theme(panel.grid.minor.y = element_blank(),# Remove minor grid lines\n#           panel.grid.minor.x = element_blank(),# Remove minor grid lines\n#           legend.position = \"bottom\",\n#           panel.background = element_rect(fill = \"white\")\n#           )+ \n#   coord_flip() +\n#     ggtitle('Volcano Plot: 5 µM abemaciclib vs Vehicle') # Add a title to the plot \n# \n# \n# \n# plot_volcano_abe\n# \n# ggsave(filename = here(\"notebooks/seq/output/abe_volcano.png\"))\n```\n:::\n\n\n# GSEA\n\n## Pathway/gene set enrichment analysis\n\nAfter differential gene expression (DGE) analysis we have a long list of differentially expressed genes. Pathway enrichment analysis (PEA) is a common approach to summarise this long list of genes and interpret hundreds of DGEs at once. So instead of having a list of 20 000 genes, we may get a list of 50 or 60 biological pathways.\n\n![Summarise lists of DGEs to pathways](/images/GSE_analysis/pea.png)\n\nPathway enrichment analysis summarises the long gene list to a shorter and more easily interpretable list of pathways.\n\n### How does PEA work?\n\nFor a pathway enrichment analysis we need 3 ingredients.\n\n1.  Our **gene list** of interest, fx. a list of DGEs which we want to summarise.\n2.  A list of **background genes** - fx all of the genes in the human genome/transcriptome.\n3.  A list of **gene sets**. Gene sets are basically groups of related genes. Of course, for the algorithm to know if your list has a lot of genes related to breast cancer, or apoptosis, or cellular respiration, you need to tell it which genes are actually involved in breast cancer, apoptosis, and cellular respiration.\n\n![Components of a pathway enrichment analysis](/images/GSE_analysis/pea_2.png)\n\nPEA essentially compares our gene list to the background list to check if there are certain pathways **overrepresented**\n\nOne example could be: Alcoholic liver disease is usually involved in inflammatory processes, which often involve pro-inflammatory cytokines like IL-6. So, is there an **association** between our genes differentially expressed in alcoholic liver disease vs healthy cells and IL-6 production.\n\n![](/images/GSE_analysis/pea_3.png)\n\nIs our list of DGEs **enriched** with genes involved in IL-6 synthesis pathway?\n\n![](/images/GSE_analysis/pea_4.png)\n\nTo answer this question, we can build a contigency table. This will help us determine whether the fraction of genes of interest in the pathway is higher compared to the fraction of genes outside the pathway (so, backgound set). See the table below.\n\n![](/images/GSE_analysis/pea_5.png)\n\nWe have a column for differentially expressed and a column not differentially expressed genes, and then two rows, for genes that are annotated as being involved in IL-6 production and genes that are not involved in IL6 production.\n\nTo simplify things a lot, we will just look at 30 genes. 15 deferentially expressed genes were identified and of those, 12 genes were associated with the GO term interleukin-6 production.\n\nWe find that **12 of our 15** differentially expressed genes are involved in IL-6 production. We could quite confidently say that **our gene list is enriched with genes involved in IL-6 production.**\n\nBut what if there was 9 of our 15 involved in IL-6 production. is our gene list enriched with genes involved in IL-6 production? We need an objective statistical test to determine what is enriched and what is not. There are many methods, by the one that is commonly used in pathway enrichment analysis is fisher's exact test. I our p-value is really lwo we can safely say that our list is overrepresented with genes involved in IL-6 production, in other words, IL-6 prodcution is an immportant pathway in alchoholic liver diseases compared to healthy liver cells. Becayse we a testing thousands of pathways we till have to adjust p-values with a multiple-testing correction method.\n\nPathway enrichment analysis takes your **gene list** of interest and compares it to a **list of background genes** to check if there are certain pathways that are over-represented.\n\nSo it checks the fraction of your genes annotated to a specific Gene Ontology (GO) term. Then it checks the proportion of genes in the whole genome (your background set) that are annotated to that GO Term.\n\nThen, it gives you a **p-value** which tells you what is the probability that that pathway is actually over-represented in your gene list and it wasn't just coincidence.\n\n### Our analysis\n\nMark Burton have done the GSE analysis using four different databases, outlined below. I think we just use the vehicle control as the list of background genes. Otherwise he must have used some subset of only genes/pathways related to PHHs.\n\nGene Ontology (GO), KEGG, Reactome, and BioCarta are databases and tools that provide comprehensive information on gene and protein functions, interactions, and pathways. Each has its unique focus and strengths:\n\n1.  **Gene Ontology (GO)**\n\n    -   **Focus:** Provides a standardized vocabulary (ontologies) to describe gene and protein roles in cells. It covers three domains: Biological Process (BP), which describes the biological objectives to which the gene or gene product contributes; Molecular Function (MF), which describes the elemental activities of a gene product at the molecular level, such as binding or catalysis; and Cellular Component (CC), which describes where in the cell the gene product is active.\n\n    -   **Strengths:** Widely used for annotating genes and gene products across species; facilitates consistent descriptions of gene products even in the context of different studies.\n\n2.  **Kyoto Encyclopedia of Genes and Genomes (KEGG)**\n\n    -   **Focus:** Integrates genomic, chemical, and systemic functional information. KEGG provides pathways maps that represent molecular interaction and reaction networks, covering metabolism, genetic information processing, environmental information processing, cellular processes, organismal systems, and human diseases.\n\n    -   **Strengths:** Comprehensive in linking genes to functions through networks of interactions; useful for understanding high-level functions and utilities of the biological system.\n\n3.  **Reactome**\n\n    -   **Focus:** A curated database of pathways and reactions in human biology. Reactome pathways encompass various processes such as metabolism, signal transduction, gene expression, and cell cycle. It aims to provide a detailed, visual representation of molecular processes.\n\n    -   **Strengths:** Highly detailed and manually curated; provides an interactive pathway browser that facilitates the exploration of complex biological pathways; also includes pathways from other species, providing a comparative perspective.\n\n4.  **BioCarta**\n\n    -   **Focus:** Earlier widely used for providing graphical representations of molecular pathways, focusing on various biological and signaling pathways. BioCarta's pathways were known for highlighting the interactions between different molecules and the potential regulation mechanisms.\n\n    -   **Strengths:** Although less updated and less comprehensive than other databases mentioned, BioCarta pathways have been historically significant for offering insights into specific signaling and molecular pathways, contributing to the understanding of complex biological processes.\n\n## Visualization of GSEA\n\n#### Setup\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(here)\nlibrary(readxl)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::between()     masks data.table::between()\n✖ dplyr::filter()      masks stats::filter()\n✖ dplyr::first()       masks data.table::first()\n✖ lubridate::hour()    masks data.table::hour()\n✖ lubridate::isoweek() masks data.table::isoweek()\n✖ dplyr::lag()         masks stats::lag()\n✖ dplyr::last()        masks data.table::last()\n✖ lubridate::mday()    masks data.table::mday()\n✖ lubridate::minute()  masks data.table::minute()\n✖ lubridate::month()   masks data.table::month()\n✖ lubridate::quarter() masks data.table::quarter()\n✖ lubridate::second()  masks data.table::second()\n✖ purrr::transpose()   masks data.table::transpose()\n✖ lubridate::wday()    masks data.table::wday()\n✖ lubridate::week()    masks data.table::week()\n✖ lubridate::yday()    masks data.table::yday()\n✖ lubridate::year()    masks data.table::year()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(patchwork)\n```\n:::\n\n\n### IL-1B 10 ng\n\n#### KEGG\n\nTesting just KEGG. Getting the code to work for one file.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_raw_data <- here(\"notebooks/seq/data_raw/GSEA/\")\ngsea_data <- read_excel(here(path_raw_data, \"KEGG_IL1B_10_vs_vehicle.xlsx\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplot_data <- \n  arrange(gsea_data, -abs(NES)) %>% \n    group_by(sign(NES)) %>%\n    slice(1:20)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nggplot(data = plot_data,\n       aes(x = NES,\n           y = fct_reorder(pathway, NES),\n           fill = padj\n           )\n       ) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_distiller(type = \"seq\", palette = \"YlOrRd\")\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n  #scale_fill_continuous(low='red', high='blue', guide=guide_colorbar(reverse=TRUE), ) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nggplot(plot_data, aes(x = NES, y = fct_reorder(pathway, NES), color = padj, size = size)) + \n  geom_point(stat = 'identity') + \n  xlab(\"ratio\") + ylab(\"path\") + ggtitle(\"your data\") + \n  theme_bw() + \n  scale_color_viridis_c() +\n  #scale_color_distiller(type = \"seq\", palette = \"PuRd\") +\n  geom_vline(xintercept = 0)\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n### All KEGG plots\n\nPlot all using a function\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Get file paths\nkegg_file_paths <- dir(here(\"notebooks/seq/data_raw/GSEA\"), pattern = \"KEGG\", full.names = TRUE)\n\n# Subset to interleukines if wanted\n#kegg_file_paths[grep(pattern = \"IL\", kegg_file_paths)]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nKEGG_plot_list <- map(kegg_file_paths, function(file_path) {\n  # Read the file\n  plot_data <- read_excel(file_path)\n  \n  # Process the data\n  processed_data <- plot_data %>%\n    arrange(desc(abs(NES))) %>%\n    group_by(sign_NES = sign(NES)) %>%\n    slice_head(n = 10) %>%\n    ungroup() %>%\n    filter(padj <= 0.05) %>%\n    mutate(pathway = str_remove_all(pathway, \"KEGG_\"),\n           pathway = str_replace_all(pathway, pattern = \"_\", replacement = \" \"),\n           pathway = str_to_title(pathway))\n\n  \n  # Generate the plot\n  ggplot(processed_data,\n         aes(x = NES,\n             y = fct_reorder(pathway, NES),\n             color = padj,\n             size = size\n             )\n         ) +\n    geom_point(stat = 'identity') +\n    labs(x = \"NES\",\n         y = \"Pathway\",\n         title = paste(\"Top 10 up/down Pathways for\",\"\", basename(file_path))\n         ) +\n    theme_bw() +\n    geom_vline(xintercept = 0) +\n    scale_color_viridis_c()\n    #scale_color_distiller(type = \"seq\", palette = \"YlOrRd\") #+\n    #theme(axis.text.y = element_text(size = 8))\n})\n```\n:::\n\n::: {#cell-fig-kegg-abe .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-kegg-abe\n\nKEGG_plot_list[[1]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-kegg-abe-1.png){#fig-kegg-abe width=672}\n:::\n:::\n\n::: {#cell-fig-kegg-il1b-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-kegg-il1b-0.1\n\nKEGG_plot_list[[2]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-kegg-il1b-0.1-1.png){#fig-kegg-il1b-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-kegg-il1b-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-kegg-il1b-10\n\nKEGG_plot_list[[3]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-kegg-il1b-10-1.png){#fig-kegg-il1b-10 width=672}\n:::\n:::\n\n::: {#cell-fig-kegg-il6-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-kegg-il6-0.1\n\nKEGG_plot_list[[4]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-kegg-il6-0.1-1.png){#fig-kegg-il6-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-kegg-il6-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-kegg-il6-10\n\nKEGG_plot_list[[5]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-kegg-il6-10-1.png){#fig-kegg-il6-10 width=672}\n:::\n:::\n\n::: {#cell-fig-kegg-il6-combined .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-kegg-il6-combined\n\nKEGG_plot_list[[6]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-kegg-il6-combined-1.png){#fig-kegg-il6-combined width=672}\n:::\n:::\n\n::: {#cell-fig-kegg-medium .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-kegg-medium\n\nKEGG_plot_list[[7]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-kegg-medium-1.png){#fig-kegg-medium width=672}\n:::\n:::\n\n::: {#cell-fig-kegg-rif .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-kegg-rif\n\nKEGG_plot_list[[8]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-kegg-rif-1.png){#fig-kegg-rif width=672}\n:::\n:::\n\n\n#### ALL BIOCARTA\n\n**Plot all using a function**\n\nGet all file paths related to BIOCARTA\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Get file paths\nbiocarta_file_paths <- dir(here(\"notebooks/seq/data_raw/GSEA\"), pattern = \"BIOCARTA\", full.names = TRUE)\n\n# Subset to interleukines if wanted\n# kegg_file_paths[grep(pattern = \"IL\", kegg_file_paths)]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nBIOCARTA_plot_list <- map(biocarta_file_paths, function(file_path) {\n  # Read the file\n  plot_data <- read_excel(file_path)\n  \n  # Process the data\n  processed_data <- plot_data %>%\n    arrange(desc(abs(NES))) %>%\n    group_by(sign_NES = sign(NES)) %>%\n    slice_head(n = 10) %>%\n    ungroup() %>%\n    filter(padj <= 0.05) %>%\n    mutate(pathway = str_remove_all(pathway, \"BIOCARTA\"),\n           pathway = str_replace_all(pathway, pattern = \"_\", replacement = \" \"),\n           pathway = str_to_title(pathway))\n  \n  # Generate the plot\n  ggplot(processed_data, aes(x = NES, y = fct_reorder(pathway, NES), color = padj, size = size)) +\n    geom_point(stat = 'identity') +\n    labs(x = \"NES\", y = \"Pathway\", title = paste(\"Top 10 up/down Pathways for\",\"\", basename(file_path))) +\n    theme_bw() +\n    geom_vline(xintercept = 0) +\n    scale_color_viridis_c()\n    #scale_color_distiller(type = \"seq\", palette = \"YlOrRd\") #+\n    #theme(legend.position = \"none\") # Remove legend to focus on the data\n})\n```\n:::\n\n::: {#cell-fig-biocarta-abe .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-biocarta-abe\nBIOCARTA_plot_list[[1]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-biocarta-abe-1.png){#fig-biocarta-abe width=672}\n:::\n:::\n\n::: {#cell-fig-biocarta-il1b-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-biocarta-il1b-0.1\nBIOCARTA_plot_list[[2]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-biocarta-il1b-0.1-1.png){#fig-biocarta-il1b-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-biocarta-il1b-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-biocarta-il1b-10\nBIOCARTA_plot_list[[3]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-biocarta-il1b-10-1.png){#fig-biocarta-il1b-10 width=672}\n:::\n:::\n\n::: {#cell-fig-biocarta-il6-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-biocarta-il6-0.1\nBIOCARTA_plot_list[[4]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-biocarta-il6-0.1-1.png){#fig-biocarta-il6-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-biocarta-il6-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-biocarta-il6-10\nBIOCARTA_plot_list[[5]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-biocarta-il6-10-1.png){#fig-biocarta-il6-10 width=672}\n:::\n:::\n\n::: {#cell-fig-biocarta-il6-combined .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-biocarta-il6-combined\nBIOCARTA_plot_list[[6]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-biocarta-il6-combined-1.png){#fig-biocarta-il6-combined width=672}\n:::\n:::\n\n::: {#cell-fig-biocarta-medium .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-biocarta-medium\nBIOCARTA_plot_list[[7]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-biocarta-medium-1.png){#fig-biocarta-medium width=672}\n:::\n:::\n\n::: {#cell-fig-biocarta-rif .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-biocarta-rif\nBIOCARTA_plot_list[[8]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-biocarta-rif-1.png){#fig-biocarta-rif width=672}\n:::\n:::\n\n\n### REACTOME\n\nGet all file paths related to Reactome\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Get file paths\nreactome_file_paths <- dir(here(\"notebooks/seq/data_raw/GSEA\"), pattern = \"REACTOME\", full.names = TRUE)\n\n# Subset to interleukines if wanted\n# kegg_file_paths[grep(pattern = \"IL\", kegg_file_paths)]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nREACTOME_plot_list <- map(reactome_file_paths, function(file_path) {\n  # Read the file\n  plot_data <- read_excel(file_path)\n  \n  # Process the data\n  processed_data <- plot_data %>%\n    arrange(desc(abs(NES))) %>%\n    group_by(sign_NES = sign(NES)) %>%\n    slice_head(n = 10) %>%\n    ungroup() %>%\n    filter(padj <= 0.05) %>%\n    mutate(pathway = str_remove_all(pathway, \"REACTOME_\"),\n           pathway = str_replace_all(pathway, pattern = \"_\", replacement = \" \"),\n           pathway = str_to_title(pathway))\n  \n  # Generate the plot\n  ggplot(processed_data,\n         aes(x = NES,\n             y = fct_reorder(pathway, NES),\n             color = padj,\n             size = size\n             )\n         ) +\n    geom_point(stat = 'identity') +\n    labs(x = \"NES\",\n         y = \"Pathway\",\n         title = paste(\"Top 10 up/down Pathways for\",\"\", basename(file_path))\n         ) +\n    theme_bw() +\n    geom_vline(xintercept = 0) +\n    scale_color_viridis_c() \n    #scale_color_distiller(type = \"seq\", palette = \"YlOrRd\") #+\n    #theme(legend.position = \"none\") # Remove legend to focus on the data\n})\n```\n:::\n\n::: {#cell-fig-reactome-abe .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-reactome-abe\n\nREACTOME_plot_list[[1]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-reactome-abe-1.png){#fig-reactome-abe width=672}\n:::\n:::\n\n::: {#cell-fig-reactome-il1b-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-reactome-il1b-0.1\n\nREACTOME_plot_list[[2]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-reactome-il1b-0.1-1.png){#fig-reactome-il1b-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-reactome-il1b-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-reactome-il1b-10\n\nREACTOME_plot_list[[3]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-reactome-il1b-10-1.png){#fig-reactome-il1b-10 width=672}\n:::\n:::\n\n::: {#cell-fig-reactome-il6-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-reactome-il6-0.1\n\nREACTOME_plot_list[[4]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-reactome-il6-0.1-1.png){#fig-reactome-il6-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-reactome-il6-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-reactome-il6-10\n\nREACTOME_plot_list[[5]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-reactome-il6-10-1.png){#fig-reactome-il6-10 width=672}\n:::\n:::\n\n::: {#cell-fig-reactome-il6-combined .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-reactome-il6-combined\n\nREACTOME_plot_list[[6]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-reactome-il6-combined-1.png){#fig-reactome-il6-combined width=672}\n:::\n:::\n\n::: {#cell-fig-reactome-medium .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-reactome-medium\n\nREACTOME_plot_list[[7]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-reactome-medium-1.png){#fig-reactome-medium width=672}\n:::\n:::\n\n::: {#cell-fig-reactome-rif .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-reactome-rif\n\nREACTOME_plot_list[[8]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-reactome-rif-1.png){#fig-reactome-rif width=672}\n:::\n:::\n\n\n### GO combined databases\n\nCONSIDER :Split data into each of the GO databases:\n\n1.  **Biological Process (BP)**, which describes the biological objectives to which the gene or gene product contributes.\n2.  **Molecular Function (MF**), which describes the elemental activities of a gene product at the molecular level, such as binding or catalysis.\n3.  **Cellular Component (CC)**, which describes where in the cell the gene product is active.\n\nGet all file paths related to GO\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Get file paths\ngo_file_paths <- dir(here(\"notebooks/seq/data_raw/GSEA\"), pattern = \"GO\", full.names = TRUE)\n\n# Subset to interleukines if wanted\n# kegg_file_paths[grep(pattern = \"IL\", kegg_file_paths)]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nGO_plot_list <- map(go_file_paths, function(file_path) {\n  # Read the file\n  plot_data <- read_excel(file_path)\n  \n  # Process the data\n  processed_data <- plot_data %>%\n    arrange(desc(abs(NES))) %>%\n    group_by(sign_NES = sign(NES)) %>%\n    slice_head(n = 10) %>%\n    ungroup() %>%\n    filter(padj <= 0.05)\n  \n  # Generate the plot\n  ggplot(processed_data,\n         aes(x = NES,\n             y = fct_reorder(pathway, NES),\n             color = padj,\n             size = size\n             )\n         ) +\n    geom_point(stat = 'identity') +\n    labs(x = \"NES\",\n         y = \"Pathway\",\n         title = paste(\"Top 10 up/down Pathways for\",\"\", basename(file_path))\n         ) +\n    theme_bw() +\n    geom_vline(xintercept = 0) +\n    scale_color_viridis_c() \n    #scale_color_viridis_c(option = \"A\")\n    #scale_color_distiller(type = \"seq\", palette = \"YlOrRd\") #+\n    #theme(legend.position = \"none\") # Remove legend to focus on the data\n})\n```\n:::\n\n::: {#cell-fig-go-abe .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-abe\n\nGO_plot_list[[1]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-abe-1.png){#fig-go-abe width=672}\n:::\n:::\n\n::: {#cell-fig-go-il1b-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-il1b-0.1\n\nGO_plot_list[[2]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-il1b-0.1-1.png){#fig-go-il1b-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-go-il1b-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-il1b-10\n\nGO_plot_list[[3]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-il1b-10-1.png){#fig-go-il1b-10 width=672}\n:::\n:::\n\n::: {#cell-fig-go-il6-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-il6-0.1\n\nGO_plot_list[[4]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-il6-0.1-1.png){#fig-go-il6-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-go-il6-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-il6-10\n\nGO_plot_list[[5]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-il6-10-1.png){#fig-go-il6-10 width=672}\n:::\n:::\n\n::: {#cell-fig-go-plots6 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-plots6\n#| fig-width: 12\n#| fig-height: 10\n\nGO_plot_list[[6]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-plots6-1.png){#fig-go-plots6 width=1152}\n:::\n:::\n\n::: {#cell-fig-go-medium .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-medium\n#| fig-width: 12\n#| fig-height: 10\n\nGO_plot_list[[7]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-medium-1.png){#fig-go-medium width=1152}\n:::\n:::\n\n::: {#cell-fig-go-rif .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-rif\n#| fig-width: 12\n#| fig-height: 10\n\nGO_plot_list[[8]]\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-rif-1.png){#fig-go-rif width=1152}\n:::\n:::\n\n\n### GO split databases\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Read the GO file paths, and for each dataframe, add a column denoting \n# Which GO database was used.\nGO_sorted_dfs <- map(go_file_paths, function(path) {\n  read_excel(path) %>%\n    mutate(db = case_when(\n      str_detect(pathway, \"GOBP\") ~ \"BP\",\n      str_detect(pathway, \"GOCC\") ~ \"CC\",\n      str_detect(pathway, \"GOMF\") ~ \"MF\"\n    ))\n})\n\n# Process the dataframes. Arrange by absolute NES vaule, group on positive or \n# negative regulation. Take just top ten of each group, and filter in only stat\n# significant pathways.\nGO_processed_data <- map(GO_sorted_dfs, function(df) {\n    df %>%\n    arrange(desc(abs(NES))) %>%\n    group_by(sign_NES = sign(NES)) %>%\n    slice_head(n = 10) %>%\n    ungroup() %>%\n    filter(padj <= 0.05)\n})\n\n\n# Function to generate plots for each db category within a single dataframe\ngenerate_plots <- function(df, file_path) {\n  db_categories <- unique(df$db)\n  plots <- map(db_categories, function(db_category) {\n    filtered_data <- filter(df, db == db_category)\n    plot <- ggplot(filtered_data,\n                   aes(x = NES,\n                       y = fct_reorder(pathway, NES),\n                       color = padj,\n                       size = size)) +\n      geom_point(stat = 'identity') +\n      labs(x = \"NES\",\n           y = \"Pathway\",\n           title = paste(\"Top 10 up/down Pathways for\", db_category, basename(file_path))) +\n      theme_bw() +\n      geom_vline(xintercept = 0) +\n      scale_color_viridis_c()\n    plot\n  })\n  names(plots) <- db_categories\n  return(plots)\n}\n\n# Map over GO_processed_data to generate plots for each dataframe\nGO_plots <- map2(GO_processed_data, go_file_paths, generate_plots)\n\n# GO_plots is a list of lists of plots, with each inner list containing three plots (one for each db category)\n\n\n# Extracting treatment names from the file paths\n# Assuming the treatment names are directly before \"vs_vehicle.xlsx\" in the file names\ntreatment_names <- sapply(go_file_paths, function(path) {\n  # Extract the part of the filename before \"vs_vehicle.xlsx\"\n  treatment_name <- sub(\".*GO_(.*)_vs_vehicle\\\\.xlsx$\", \"\\\\1\", basename(path))\n  # Replace underscores with spaces or any other necessary formatting\n  treatment_name <- gsub(\"_\", \" \", treatment_name)\n  treatment_name\n})\n\n# Now, apply these names to your combined_GO_plots list\nnames(GO_plots) <- treatment_names\n```\n:::\n\n::: {#cell-fig-go-split-il1b-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-split-il1b-0.1\n\n# Combine plots from each database\ncombined_plot <- GO_plots[[2]]$BP + GO_plots[[2]]$CC + GO_plots[[2]]$MF + \n  plot_layout(ncol = 1) # Arranges the plots in a single column\n\n# Print the combined plot\nprint(combined_plot)\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-split-il1b-0.1-1.png){#fig-go-split-il1b-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-go-split-il1b-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-split-il1b-10\n#| fig-width: 20\n\n# Combine plots from each database\ncombined_plot <- GO_plots[[3]]$BP + GO_plots[[3]]$CC + GO_plots[[3]]$MF + \n  plot_layout(ncol = 1) # Arranges the plots in a single column\n\n# Print the combined plot\nprint(combined_plot)\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-split-il1b-10-1.png){#fig-go-split-il1b-10 width=1920}\n:::\n:::\n\n::: {#cell-fig-go-split-i6-0.1 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-split-i6-0.1\n\n# Combine plots from each database\ncombined_plot <- GO_plots[[4]]$BP + GO_plots[[4]]$CC + GO_plots[[4]]$MF + \n  plot_layout(ncol = 1) # Arranges the plots in a single column\n\n# Print the combined plot\nprint(combined_plot)\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-split-i6-0.1-1.png){#fig-go-split-i6-0.1 width=672}\n:::\n:::\n\n::: {#cell-fig-go-split-i6-10 .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-split-i6-10\n\n# Combine plots from each database\ncombined_plot <- GO_plots[[5]]$BP + GO_plots[[5]]$CC + GO_plots[[5]]$MF + \n  plot_layout(ncol = 1) # Arranges the plots in a single column\n\n# Print the combined plot\nprint(combined_plot)\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-split-i6-10-1.png){#fig-go-split-i6-10 width=672}\n:::\n:::\n\n::: {#cell-fig-go-split-i6-combined .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-split-i6-combined\n\n# Combine plots from each database\ncombined_plot <- GO_plots[[6]]$BP + GO_plots[[6]]$CC + GO_plots[[6]]$MF + \n  plot_layout(ncol = 1) # Arranges the plots in a single column\n\n# Print the combined plot\nprint(combined_plot)\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-split-i6-combined-1.png){#fig-go-split-i6-combined width=672}\n:::\n:::\n\n::: {#cell-fig-go-split-medium .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-go-split-medium\n\n# Combine plots from each database\ncombined_plot <- GO_plots[[7]]$BP + GO_plots[[7]]$CC + GO_plots[[7]]$MF + \n  plot_layout(ncol = 1) # Arranges the plots in a single column\n\n# Print the combined plot\nprint(combined_plot)\n```\n\n::: {.cell-output-display}\n![](seq_files/figure-html/fig-go-split-medium-1.png){#fig-go-split-medium width=672}\n:::\n:::\n",
    "supporting": [
      "seq_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}